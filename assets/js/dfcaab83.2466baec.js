"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[379],{1197:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6363);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},5886:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"tutorial-basics/your-first-app","title":"Your First App","description":"Let\'s create your first OneForAll application! In this tutorial, you\'ll build a simple counter app that demonstrates the core concepts of OneForAll development.","source":"@site/docs/tutorial-basics/your-first-app.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/your-first-app","permalink":"/OneForAll/docs/tutorial-basics/your-first-app","draft":false,"unlisted":false,"editUrl":"https://github.com/Rohit-Ahirwal/oneforall/tree/main/docs/docs/tutorial-basics/your-first-app.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started with OneForAll","permalink":"/OneForAll/docs/intro"},"next":{"title":"State Management","permalink":"/OneForAll/docs/tutorial-basics/state-management"}}');var s=t(7259),i=t(1197);const o={sidebar_position:1},r="Your First App",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating the Project",id:"creating-the-project",level:2},{value:"Understanding the Basic Structure",id:"understanding-the-basic-structure",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"1. App Instance",id:"1-app-instance",level:3},{value:"2. State Management",id:"2-state-management",level:3},{value:"3. Windows",id:"3-windows",level:3},{value:"4. Components",id:"4-components",level:3},{value:"5. Event Handling",id:"5-event-handling",level:3},{value:"Building a Counter App",id:"building-a-counter-app",level:2},{value:"Running Your App",id:"running-your-app",level:2},{value:"What&#39;s Happening?",id:"whats-happening",level:2},{value:"Adding More Features",id:"adding-more-features",level:2},{value:"Styling with Tailwind CSS",id:"styling-with-tailwind-css",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2},{value:"Complete Code",id:"complete-code",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"your-first-app",children:"Your First App"})}),"\n",(0,s.jsx)(n.p,{children:"Let's create your first OneForAll application! In this tutorial, you'll build a simple counter app that demonstrates the core concepts of OneForAll development."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Make sure you have OneForAll installed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install oneforall\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-the-project",children:"Creating the Project"}),"\n",(0,s.jsx)(n.p,{children:"First, let's create a new OneForAll project:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"oneforall init my-first-app\ncd my-first-app\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This creates a basic project structure with an ",(0,s.jsx)(n.code,{children:"app.py"})," file."]}),"\n",(0,s.jsx)(n.h2,{id:"understanding-the-basic-structure",children:"Understanding the Basic Structure"}),"\n",(0,s.jsxs)(n.p,{children:["Let's look at the generated ",(0,s.jsx)(n.code,{children:"app.py"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window, Text, Button, Container\n\n# Create application\napp = App()\n\n# Initialize state\napp.use_state("message", "Welcome to OneForAll!")\n\n# Create main window\nwindow = Window(title="OneForAll App", size=(600, 400))\n\n# Create UI\ncontainer = Container(className="p-8 text-center space-y-4")\ncontainer.add(Text(app.use_state("message"), className="text-2xl font-bold"))\n\ndef change_message():\n    app.set_state("message", "Hello from OneForAll!")\n\ncontainer.add(Button(\n    "Click Me", \n    on_click=change_message,\n    className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"\n))\n\nwindow.add_child(container)\napp.append(window)\n\n# Run the application\nif __name__ == "__main__":\n    app.run()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,s.jsx)(n.h3,{id:"1-app-instance",children:"1. App Instance"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"app = App()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"App"})," class is the main entry point. It manages windows, state, and the application lifecycle."]}),"\n",(0,s.jsx)(n.h3,{id:"2-state-management",children:"2. State Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'app.use_state("message", "Welcome to OneForAll!")\n'})}),"\n",(0,s.jsx)(n.p,{children:"State variables hold your application's data. When state changes, the UI automatically updates."}),"\n",(0,s.jsx)(n.h3,{id:"3-windows",children:"3. Windows"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'window = Window(title="OneForAll App", size=(600, 400))\n'})}),"\n",(0,s.jsx)(n.p,{children:"Windows are containers for your UI components. You can have multiple windows in one app."}),"\n",(0,s.jsx)(n.h3,{id:"4-components",children:"4. Components"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'container = Container(className="p-8 text-center space-y-4")\ntext = Text(app.use_state("message"), className="text-2xl font-bold")\nbutton = Button("Click Me", on_click=change_message)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Components are the building blocks of your UI. OneForAll provides built-in components like ",(0,s.jsx)(n.code,{children:"Text"}),", ",(0,s.jsx)(n.code,{children:"Button"}),", and ",(0,s.jsx)(n.code,{children:"Container"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"5-event-handling",children:"5. Event Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def change_message():\n    app.set_state("message", "Hello from OneForAll!")\n\nbutton = Button("Click Me", on_click=change_message)\n'})}),"\n",(0,s.jsx)(n.p,{children:"Event handlers are functions that respond to user interactions. They typically update state to trigger UI changes."}),"\n",(0,s.jsx)(n.h2,{id:"building-a-counter-app",children:"Building a Counter App"}),"\n",(0,s.jsx)(n.p,{children:"Let's modify the app to create a counter:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window, Text, Button, Container\n\n# Create application\napp = App()\n\n# Initialize counter state\napp.use_state("counter", 0)\n\n# Create main window\nwindow = Window(title="Counter App", size=(400, 300))\n\n# Create UI container\ncontainer = Container(className="p-8 text-center space-y-6")\n\n# Add title\ncontainer.add(Text("Counter App", className="text-3xl font-bold text-gray-800"))\n\n# Add counter display\ncounter_display = Text(\n    f"Count: {app.use_state(\'counter\')}", \n    className="text-2xl font-mono bg-gray-100 px-4 py-2 rounded"\n)\ncontainer.add(counter_display)\n\n# Button container\nbutton_container = Container(className="flex space-x-4 justify-center")\n\n# Decrement button\ndef decrement():\n    current = app.use_state("counter")\n    app.set_state("counter", current - 1)\n\nbutton_container.add(Button(\n    "\u2212", \n    on_click=decrement,\n    className="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-6 rounded text-xl"\n))\n\n# Reset button\ndef reset():\n    app.set_state("counter", 0)\n\nbutton_container.add(Button(\n    "Reset", \n    on_click=reset,\n    className="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded"\n))\n\n# Increment button\ndef increment():\n    current = app.use_state("counter")\n    app.set_state("counter", current + 1)\n\nbutton_container.add(Button(\n    "+", \n    on_click=increment,\n    className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-6 rounded text-xl"\n))\n\ncontainer.add(button_container)\n\n# Add window to app\nwindow.add_child(container)\napp.append(window)\n\n# Run the application\nif __name__ == "__main__":\n    app.run()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"running-your-app",children:"Running Your App"}),"\n",(0,s.jsx)(n.p,{children:"Start the development server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"oneforall dev\n"})}),"\n",(0,s.jsx)(n.p,{children:"This starts your app with hot reload enabled. Any changes you make to the code will automatically refresh the app."}),"\n",(0,s.jsx)(n.h2,{id:"whats-happening",children:"What's Happening?"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State Initialization"}),": We create a ",(0,s.jsx)(n.code,{children:"counter"})," state variable with initial value ",(0,s.jsx)(n.code,{children:"0"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UI Creation"}),": We build a hierarchy of components (Container \u2192 Text, Buttons)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Handlers"}),": Button clicks call functions that update the counter state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reactive Updates"}),": When state changes, components that use that state automatically re-render"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"adding-more-features",children:"Adding More Features"}),"\n",(0,s.jsx)(n.p,{children:"Let's add a feature to track the number of button clicks:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Add to your state initialization\napp.use_state("counter", 0)\napp.use_state("total_clicks", 0)\n\n# Modify your event handlers\ndef decrement():\n    current = app.use_state("counter")\n    clicks = app.use_state("total_clicks")\n    app.set_state("counter", current - 1)\n    app.set_state("total_clicks", clicks + 1)\n\ndef increment():\n    current = app.use_state("counter")\n    clicks = app.use_state("total_clicks")\n    app.set_state("counter", current + 1)\n    app.set_state("total_clicks", clicks + 1)\n\ndef reset():\n    app.set_state("counter", 0)\n    # Don\'t reset total_clicks to keep the history\n\n# Add a clicks display\ncontainer.add(Text(\n    f"Total clicks: {app.use_state(\'total_clicks\')}", \n    className="text-sm text-gray-600"\n))\n'})}),"\n",(0,s.jsx)(n.h2,{id:"styling-with-tailwind-css",children:"Styling with Tailwind CSS"}),"\n",(0,s.jsx)(n.p,{children:"OneForAll includes Tailwind CSS for styling. You can use any Tailwind classes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Gradient background\ncontainer = Container(className="p-8 text-center space-y-6 bg-gradient-to-br from-blue-400 to-purple-600 min-h-screen")\n\n# Styled counter display\ncounter_display = Text(\n    f"Count: {app.use_state(\'counter\')}", \n    className="text-4xl font-bold text-white bg-black bg-opacity-20 px-6 py-3 rounded-lg shadow-lg"\n)\n\n# Modern buttons\nincrement_btn = Button(\n    "+", \n    on_click=increment,\n    className="bg-white text-purple-600 hover:bg-purple-50 font-bold py-3 px-8 rounded-full shadow-lg transform hover:scale-105 transition-all duration-200 text-2xl"\n)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Congratulations! You've built your first OneForAll app. Here's what you learned:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 How to create an app with ",(0,s.jsx)(n.code,{children:"App()"})," and ",(0,s.jsx)(n.code,{children:"Window()"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 How to manage state with ",(0,s.jsx)(n.code,{children:"use_state()"})," and ",(0,s.jsx)(n.code,{children:"set_state()"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 How to create UI with components like ",(0,s.jsx)(n.code,{children:"Text"}),", ",(0,s.jsx)(n.code,{children:"Button"}),", and ",(0,s.jsx)(n.code,{children:"Container"})]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 How to handle user interactions with event handlers"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 How to style components with Tailwind CSS"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./state-management",children:"State Management"})," - Learn advanced state patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./creating-layouts",children:"Creating Layouts"})," - Build complex UI layouts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./styling",children:"Styling Guide"})," - Master Tailwind CSS styling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./multiple-windows",children:"Multiple Windows"})," - Work with multiple windows"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"complete-code",children:"Complete Code"}),"\n",(0,s.jsx)(n.p,{children:"Here's the complete counter app code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window, Text, Button, Container\n\n# Create application\napp = App()\n\n# Initialize state\napp.use_state("counter", 0)\napp.use_state("total_clicks", 0)\n\n# Create main window\nwindow = Window(title="Counter App", size=(400, 350))\n\n# Create UI container\ncontainer = Container(className="p-8 text-center space-y-6 bg-gradient-to-br from-blue-400 to-purple-600 min-h-full")\n\n# Add title\ncontainer.add(Text("Counter App", className="text-3xl font-bold text-white"))\n\n# Add counter display\ncounter_display = Text(\n    f"Count: {app.use_state(\'counter\')}", \n    className="text-4xl font-bold text-white bg-black bg-opacity-20 px-6 py-3 rounded-lg shadow-lg"\n)\ncontainer.add(counter_display)\n\n# Button container\nbutton_container = Container(className="flex space-x-4 justify-center")\n\n# Decrement button\ndef decrement():\n    current = app.use_state("counter")\n    clicks = app.use_state("total_clicks")\n    app.set_state("counter", current - 1)\n    app.set_state("total_clicks", clicks + 1)\n\nbutton_container.add(Button(\n    "\u2212", \n    on_click=decrement,\n    className="bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-full shadow-lg transform hover:scale-105 transition-all duration-200 text-xl"\n))\n\n# Reset button\ndef reset():\n    app.set_state("counter", 0)\n\nbutton_container.add(Button(\n    "Reset", \n    on_click=reset,\n    className="bg-gray-600 hover:bg-gray-700 text-white font-bold py-3 px-4 rounded-full shadow-lg transform hover:scale-105 transition-all duration-200"\n))\n\n# Increment button\ndef increment():\n    current = app.use_state("counter")\n    clicks = app.use_state("total_clicks")\n    app.set_state("counter", current + 1)\n    app.set_state("total_clicks", clicks + 1)\n\nbutton_container.add(Button(\n    "+", \n    on_click=increment,\n    className="bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-full shadow-lg transform hover:scale-105 transition-all duration-200 text-xl"\n))\n\ncontainer.add(button_container)\n\n# Add clicks counter\ncontainer.add(Text(\n    f"Total clicks: {app.use_state(\'total_clicks\')}", \n    className="text-sm text-white opacity-80"\n))\n\n# Add window to app\nwindow.add_child(container)\napp.append(window)\n\n# Run the application\nif __name__ == "__main__":\n    app.run()\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);