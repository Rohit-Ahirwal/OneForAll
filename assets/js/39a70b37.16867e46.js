"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[187],{1197:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var t=a(6363);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},2449:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"tutorial-basics/creating-layouts","title":"Creating Layouts","description":"Building effective layouts is crucial for creating professional-looking applications. In this tutorial, you\'ll learn how to use OneForAll\'s layout system with Tailwind CSS to create responsive and beautiful user interfaces.","source":"@site/docs/tutorial-basics/creating-layouts.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/creating-layouts","permalink":"/docs/tutorial-basics/creating-layouts","draft":false,"unlisted":false,"editUrl":"https://github.com/Rohit-Ahirwal/oneforall/tree/main/docs/docs/tutorial-basics/creating-layouts.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"State Management","permalink":"/docs/tutorial-basics/state-management"},"next":{"title":"Styling with Tailwind CSS","permalink":"/docs/tutorial-basics/styling"}}');var r=a(7259),o=a(1197);const s={sidebar_position:3},i="Creating Layouts",d={},l=[{value:"Layout Fundamentals",id:"layout-fundamentals",level:2},{value:"Basic Container",id:"basic-container",level:3},{value:"Flexbox Layouts",id:"flexbox-layouts",level:2},{value:"Horizontal Layout",id:"horizontal-layout",level:3},{value:"Vertical Layout",id:"vertical-layout",level:3},{value:"Centered Layout",id:"centered-layout",level:3},{value:"Grid Layouts",id:"grid-layouts",level:2},{value:"Basic Grid",id:"basic-grid",level:3},{value:"Responsive Grid",id:"responsive-grid",level:3},{value:"Dashboard Layout",id:"dashboard-layout",level:3},{value:"Common Layout Patterns",id:"common-layout-patterns",level:2},{value:"Header-Content-Footer",id:"header-content-footer",level:3},{value:"Sidebar Layout",id:"sidebar-layout",level:3},{value:"Card Layout",id:"card-layout",level:3},{value:"Responsive Design",id:"responsive-design",level:2},{value:"Breakpoint Classes",id:"breakpoint-classes",level:3},{value:"Mobile-First Design",id:"mobile-first-design",level:3},{value:"Layout Components",id:"layout-components",level:2},{value:"Reusable Layout Components",id:"reusable-layout-components",level:3},{value:"Layout Best Practices",id:"layout-best-practices",level:2},{value:"1. Use Consistent Spacing",id:"1-use-consistent-spacing",level:3},{value:"2. Plan for Different Screen Sizes",id:"2-plan-for-different-screen-sizes",level:3},{value:"3. Use Semantic Layout Structure",id:"3-use-semantic-layout-structure",level:3},{value:"4. Optimize for Performance",id:"4-optimize-for-performance",level:3},{value:"Complete Layout Example",id:"complete-layout-example",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"creating-layouts",children:"Creating Layouts"})}),"\n",(0,r.jsx)(n.p,{children:"Building effective layouts is crucial for creating professional-looking applications. In this tutorial, you'll learn how to use OneForAll's layout system with Tailwind CSS to create responsive and beautiful user interfaces."}),"\n",(0,r.jsx)(n.h2,{id:"layout-fundamentals",children:"Layout Fundamentals"}),"\n",(0,r.jsxs)(n.p,{children:["OneForAll uses the ",(0,r.jsx)(n.code,{children:"Container"})," component as the primary layout building block. Combined with Tailwind CSS classes, you can create any layout pattern."]}),"\n",(0,r.jsx)(n.h3,{id:"basic-container",children:"Basic Container"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window, Container, Text\n\napp = App()\nwindow = Window(title="Layout Demo", size=(800, 600))\n\n# Basic container\ncontainer = Container(className="p-4")\ncontainer.add(Text("Hello, World!"))\n\nwindow.add_child(container)\napp.append(window)\napp.run()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"flexbox-layouts",children:"Flexbox Layouts"}),"\n",(0,r.jsx)(n.p,{children:"Flexbox is perfect for creating flexible, responsive layouts."}),"\n",(0,r.jsx)(n.h3,{id:"horizontal-layout",children:"Horizontal Layout"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window, Container, Text, Button\n\napp = App()\nwindow = Window(title="Horizontal Layout", size=(600, 200))\n\n# Horizontal flex container\nhorizontal_container = Container(className="flex items-center justify-between p-4 bg-gray-100")\n\n# Add items\nhorizontal_container.add(Text("Left Item", className="text-blue-600 font-bold"))\nhorizontal_container.add(Text("Center Item", className="text-green-600 font-bold"))\nhorizontal_container.add(Button("Right Button", className="bg-red-500 text-white px-4 py-2 rounded"))\n\nwindow.add_child(horizontal_container)\napp.append(window)\napp.run()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"vertical-layout",children:"Vertical Layout"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Vertical flex container\nvertical_container = Container(className="flex flex-col space-y-4 p-4 h-full")\n\n# Header\nheader = Container(className="bg-blue-500 text-white p-4 rounded")\nheader.add(Text("Header", className="text-xl font-bold"))\nvertical_container.add(header)\n\n# Content\ncontent = Container(className="flex-1 bg-gray-100 p-4 rounded")\ncontent.add(Text("Main Content Area", className="text-lg"))\nvertical_container.add(content)\n\n# Footer\nfooter = Container(className="bg-gray-800 text-white p-4 rounded")\nfooter.add(Text("Footer", className="text-center"))\nvertical_container.add(footer)\n\nwindow.add_child(vertical_container)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"centered-layout",children:"Centered Layout"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Center content both horizontally and vertically\ncentered_container = Container(className="flex items-center justify-center h-full bg-gradient-to-br from-purple-400 to-pink-400")\n\n# Card in center\ncard = Container(className="bg-white p-8 rounded-lg shadow-lg max-w-md")\ncard.add(Text("Centered Card", className="text-2xl font-bold text-center mb-4"))\ncard.add(Text("This card is perfectly centered!", className="text-gray-600 text-center"))\ncard.add(Button("Action", className="w-full mt-4 bg-blue-500 text-white py-2 rounded"))\n\ncentered_container.add(card)\nwindow.add_child(centered_container)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"grid-layouts",children:"Grid Layouts"}),"\n",(0,r.jsx)(n.p,{children:"CSS Grid is excellent for creating complex, two-dimensional layouts."}),"\n",(0,r.jsx)(n.h3,{id:"basic-grid",children:"Basic Grid"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# 2x2 grid\ngrid_container = Container(className="grid grid-cols-2 gap-4 p-4 h-full")\n\n# Grid items\nfor i in range(4):\n    item = Container(className="bg-blue-100 p-4 rounded border-2 border-blue-300")\n    item.add(Text(f"Grid Item {i+1}", className="text-center font-bold"))\n    grid_container.add(item)\n\nwindow.add_child(grid_container)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"responsive-grid",children:"Responsive Grid"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Responsive grid that adapts to screen size\nresponsive_grid = Container(className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4")\n\n# Create cards\nfor i in range(6):\n    card = Container(className="bg-white p-6 rounded-lg shadow-md border")\n    card.add(Text(f"Card {i+1}", className="text-xl font-bold mb-2"))\n    card.add(Text("This is a sample card with some content.", className="text-gray-600 mb-4"))\n    card.add(Button("Learn More", className="bg-blue-500 text-white px-4 py-2 rounded"))\n    responsive_grid.add(card)\n\nwindow.add_child(responsive_grid)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dashboard-layout",children:"Dashboard Layout"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Complex dashboard layout\ndashboard = Container(className="grid grid-cols-12 gap-4 p-4 h-full")\n\n# Sidebar (3 columns wide)\nsidebar = Container(className="col-span-3 bg-gray-800 text-white p-4 rounded")\nsidebar.add(Text("Dashboard", className="text-xl font-bold mb-4"))\nsidebar.add(Text("Navigation", className="text-sm text-gray-300 mb-2"))\nsidebar.add(Button("Home", className="w-full text-left text-white hover:bg-gray-700 p-2 rounded mb-1"))\nsidebar.add(Button("Analytics", className="w-full text-left text-white hover:bg-gray-700 p-2 rounded mb-1"))\nsidebar.add(Button("Settings", className="w-full text-left text-white hover:bg-gray-700 p-2 rounded"))\ndashboard.add(sidebar)\n\n# Main content area (9 columns wide)\nmain_content = Container(className="col-span-9 space-y-4")\n\n# Top stats row\nstats_row = Container(className="grid grid-cols-3 gap-4")\nfor i, (title, value) in enumerate([("Users", "1,234"), ("Revenue", "$12,345"), ("Orders", "567")]):\n    stat_card = Container(className="bg-white p-4 rounded shadow border")\n    stat_card.add(Text(title, className="text-sm text-gray-600"))\n    stat_card.add(Text(value, className="text-2xl font-bold text-blue-600"))\n    stats_row.add(stat_card)\n\nmain_content.add(stats_row)\n\n# Chart area\nchart_area = Container(className="bg-white p-6 rounded shadow border")\nchart_area.add(Text("Analytics Chart", className="text-xl font-bold mb-4"))\nchart_area.add(Container(className="h-64 bg-gray-100 rounded flex items-center justify-center"))\nchart_area.children[-1].add(Text("Chart Placeholder", className="text-gray-500"))\nmain_content.add(chart_area)\n\ndashboard.add(main_content)\nwindow.add_child(dashboard)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"common-layout-patterns",children:"Common Layout Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"header-content-footer",children:"Header-Content-Footer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def create_app_layout():\n    # Full height container\n    app_container = Container(className="flex flex-col h-full")\n    \n    # Header\n    header = Container(className="bg-blue-600 text-white p-4 shadow-lg")\n    header_content = Container(className="flex items-center justify-between")\n    header_content.add(Text("My App", className="text-xl font-bold"))\n    \n    nav_buttons = Container(className="flex space-x-2")\n    nav_buttons.add(Button("Home", className="text-white hover:bg-blue-700 px-3 py-1 rounded"))\n    nav_buttons.add(Button("About", className="text-white hover:bg-blue-700 px-3 py-1 rounded"))\n    nav_buttons.add(Button("Contact", className="text-white hover:bg-blue-700 px-3 py-1 rounded"))\n    header_content.add(nav_buttons)\n    \n    header.add(header_content)\n    app_container.add(header)\n    \n    # Main content (flexible)\n    main_content = Container(className="flex-1 p-4 overflow-auto")\n    main_content.add(Text("Main Content Area", className="text-2xl font-bold mb-4"))\n    main_content.add(Text("This area will expand to fill available space.", className="text-gray-600"))\n    app_container.add(main_content)\n    \n    # Footer\n    footer = Container(className="bg-gray-800 text-white p-4 text-center")\n    footer.add(Text("\xa9 2024 My App. All rights reserved.", className="text-sm"))\n    app_container.add(footer)\n    \n    return app_container\n\nwindow.add_child(create_app_layout())\n'})}),"\n",(0,r.jsx)(n.h3,{id:"sidebar-layout",children:"Sidebar Layout"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def create_sidebar_layout():\n    # Main container\n    layout_container = Container(className="flex h-full")\n    \n    # Sidebar\n    sidebar = Container(className="w-64 bg-gray-100 border-r border-gray-300 p-4")\n    sidebar.add(Text("Sidebar", className="text-lg font-bold mb-4"))\n    \n    # Sidebar menu\n    menu_items = ["Dashboard", "Users", "Products", "Orders", "Settings"]\n    for item in menu_items:\n        sidebar.add(Button(\n            item, \n            className="w-full text-left p-2 hover:bg-gray-200 rounded mb-1"\n        ))\n    \n    layout_container.add(sidebar)\n    \n    # Main content\n    main_area = Container(className="flex-1 p-6")\n    main_area.add(Text("Main Content", className="text-2xl font-bold mb-4"))\n    main_area.add(Text("Content goes here...", className="text-gray-600"))\n    layout_container.add(main_area)\n    \n    return layout_container\n\nwindow.add_child(create_sidebar_layout())\n'})}),"\n",(0,r.jsx)(n.h3,{id:"card-layout",children:"Card Layout"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def create_card_layout():\n    # Container for cards\n    cards_container = Container(className="p-6 space-y-6")\n    \n    # Hero card\n    hero_card = Container(className="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-8 rounded-lg shadow-lg")\n    hero_card.add(Text("Welcome to OneForAll", className="text-3xl font-bold mb-2"))\n    hero_card.add(Text("Build amazing desktop applications with Python", className="text-xl opacity-90 mb-4"))\n    hero_card.add(Button("Get Started", className="bg-white text-blue-600 font-bold py-2 px-6 rounded"))\n    cards_container.add(hero_card)\n    \n    # Feature cards grid\n    features_grid = Container(className="grid grid-cols-1 md:grid-cols-3 gap-6")\n    \n    features = [\n        ("Easy to Use", "Simple Python syntax", "\ud83d\ude80"),\n        ("Reactive", "Automatic UI updates", "\u26a1"),\n        ("Flexible", "Tailwind CSS styling", "\ud83c\udfa8")\n    ]\n    \n    for title, description, icon in features:\n        feature_card = Container(className="bg-white p-6 rounded-lg shadow-md border hover:shadow-lg transition-shadow")\n        feature_card.add(Text(icon, className="text-4xl mb-3"))\n        feature_card.add(Text(title, className="text-xl font-bold mb-2"))\n        feature_card.add(Text(description, className="text-gray-600"))\n        features_grid.add(feature_card)\n    \n    cards_container.add(features_grid)\n    return cards_container\n\nwindow.add_child(create_card_layout())\n'})}),"\n",(0,r.jsx)(n.h2,{id:"responsive-design",children:"Responsive Design"}),"\n",(0,r.jsx)(n.h3,{id:"breakpoint-classes",children:"Breakpoint Classes"}),"\n",(0,r.jsx)(n.p,{children:"Tailwind CSS provides responsive breakpoints:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Responsive container\nresponsive_container = Container(className="p-4 sm:p-6 md:p-8 lg:p-12")\n\n# Responsive grid\nresponsive_grid = Container(className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4")\n\n# Responsive text\nresponsive_text = Text("Responsive Text", className="text-sm sm:text-base md:text-lg lg:text-xl")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"mobile-first-design",children:"Mobile-First Design"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def create_mobile_first_layout():\n    # Mobile-first approach\n    container = Container(className="p-4 md:p-8")\n    \n    # Stack on mobile, side-by-side on desktop\n    content_layout = Container(className="flex flex-col md:flex-row gap-4 md:gap-8")\n    \n    # Main content\n    main_content = Container(className="flex-1")\n    main_content.add(Text("Main Content", className="text-xl md:text-2xl font-bold mb-4"))\n    main_content.add(Text("This content adapts to screen size.", className="text-sm md:text-base"))\n    content_layout.add(main_content)\n    \n    # Sidebar (full width on mobile, fixed width on desktop)\n    sidebar = Container(className="w-full md:w-64 bg-gray-100 p-4 rounded")\n    sidebar.add(Text("Sidebar", className="font-bold mb-2"))\n    sidebar.add(Text("Additional info", className="text-sm"))\n    content_layout.add(sidebar)\n    \n    container.add(content_layout)\n    return container\n\nwindow.add_child(create_mobile_first_layout())\n'})}),"\n",(0,r.jsx)(n.h2,{id:"layout-components",children:"Layout Components"}),"\n",(0,r.jsx)(n.h3,{id:"reusable-layout-components",children:"Reusable Layout Components"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'class AppLayout:\n    def __init__(self, app):\n        self.app = app\n    \n    def create_page_header(self, title, subtitle=None):\n        header = Container(className="mb-8")\n        header.add(Text(title, className="text-3xl font-bold text-gray-800"))\n        if subtitle:\n            header.add(Text(subtitle, className="text-lg text-gray-600 mt-2"))\n        return header\n    \n    def create_card(self, title, content, actions=None):\n        card = Container(className="bg-white p-6 rounded-lg shadow-md border")\n        card.add(Text(title, className="text-xl font-bold mb-4"))\n        card.add(Text(content, className="text-gray-600 mb-4"))\n        \n        if actions:\n            action_container = Container(className="flex space-x-2")\n            for action in actions:\n                action_container.add(action)\n            card.add(action_container)\n        \n        return card\n    \n    def create_two_column_layout(self, left_content, right_content):\n        layout = Container(className="grid grid-cols-1 lg:grid-cols-2 gap-8")\n        layout.add(left_content)\n        layout.add(right_content)\n        return layout\n\n# Usage\nlayout_helper = AppLayout(app)\n\n# Create page\npage_container = Container(className="p-6")\n\n# Add header\npage_container.add(layout_helper.create_page_header(\n    "Dashboard", \n    "Welcome to your application dashboard"\n))\n\n# Create cards\ncard1 = layout_helper.create_card(\n    "Statistics", \n    "View your application statistics and metrics.",\n    [Button("View Details", className="bg-blue-500 text-white px-4 py-2 rounded")]\n)\n\ncard2 = layout_helper.create_card(\n    "Settings", \n    "Configure your application preferences.",\n    [Button("Open Settings", className="bg-gray-500 text-white px-4 py-2 rounded")]\n)\n\n# Add two-column layout\npage_container.add(layout_helper.create_two_column_layout(card1, card2))\n\nwindow.add_child(page_container)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"layout-best-practices",children:"Layout Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-use-consistent-spacing",children:"1. Use Consistent Spacing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 Good - Consistent spacing scale\ncontainer = Container(className="p-4 space-y-4")  # 16px padding and spacing\ninner_container = Container(className="p-2 space-y-2")  # 8px padding and spacing\n\n# \u274c Bad - Inconsistent spacing\ncontainer = Container(className="p-3 space-y-5")  # Mixed spacing values\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-plan-for-different-screen-sizes",children:"2. Plan for Different Screen Sizes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 Good - Responsive design\nresponsive_layout = Container(className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4")\n\n# \u274c Bad - Fixed layout\nfixed_layout = Container(className="grid grid-cols-3 gap-4")  # Breaks on mobile\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-use-semantic-layout-structure",children:"3. Use Semantic Layout Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 Good - Clear structure\napp_container = Container(className="flex flex-col h-full")\nheader = Container(className="bg-blue-600 p-4")  # Header\nmain = Container(className="flex-1 p-4")         # Main content\nfooter = Container(className="bg-gray-800 p-4")  # Footer\n\n# \u274c Bad - Unclear structure\ncontainer1 = Container(className="bg-blue-600 p-4")\ncontainer2 = Container(className="flex-1 p-4")\ncontainer3 = Container(className="bg-gray-800 p-4")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-optimize-for-performance",children:"4. Optimize for Performance"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 Good - Efficient nesting\nmain_container = Container(className="p-4")\ncontent_grid = Container(className="grid grid-cols-2 gap-4")\nmain_container.add(content_grid)\n\n# \u274c Bad - Unnecessary nesting\nwrapper = Container()\nouter = Container(className="p-4")\ninner = Container()\ncontent_grid = Container(className="grid grid-cols-2 gap-4")\ninner.add(content_grid)\nouter.add(inner)\nwrapper.add(outer)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"complete-layout-example",children:"Complete Layout Example"}),"\n",(0,r.jsx)(n.p,{children:"Here's a complete example combining multiple layout techniques:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window, Container, Text, Button\n\napp = App()\n\n# Initialize state for dynamic content\napp.use_state("current_page", "dashboard")\napp.use_state("user_name", "John Doe")\n\nwindow = Window(title="Complete Layout Demo", size=(1200, 800))\n\n# Main app container\napp_container = Container(className="flex flex-col h-full bg-gray-50")\n\n# Header\nheader = Container(className="bg-white shadow-sm border-b border-gray-200 p-4")\nheader_content = Container(className="flex items-center justify-between max-w-7xl mx-auto")\n\n# Logo and title\nlogo_section = Container(className="flex items-center space-x-3")\nlogo_section.add(Text("\ud83d\ude80", className="text-2xl"))\nlogo_section.add(Text("OneForAll App", className="text-xl font-bold text-gray-800"))\nheader_content.add(logo_section)\n\n# User section\nuser_section = Container(className="flex items-center space-x-4")\nuser_section.add(Text(f"Welcome, {app.use_state(\'user_name\')}", className="text-gray-600"))\nuser_section.add(Button("Logout", className="bg-red-500 text-white px-3 py-1 rounded text-sm"))\nheader_content.add(user_section)\n\nheader.add(header_content)\napp_container.add(header)\n\n# Main content area\nmain_area = Container(className="flex flex-1 max-w-7xl mx-auto w-full")\n\n# Sidebar\nsidebar = Container(className="w-64 bg-white shadow-sm border-r border-gray-200 p-4")\nsidebar.add(Text("Navigation", className="text-sm font-semibold text-gray-500 uppercase tracking-wide mb-4"))\n\nnav_items = ["Dashboard", "Analytics", "Users", "Settings"]\nfor item in nav_items:\n    is_active = item.lower() == app.use_state("current_page")\n    button_class = "w-full text-left p-3 rounded mb-1 transition-colors "\n    if is_active:\n        button_class += "bg-blue-100 text-blue-700 font-medium"\n    else:\n        button_class += "text-gray-700 hover:bg-gray-100"\n    \n    def set_page(page_name):\n        def handler():\n            app.set_state("current_page", page_name.lower())\n        return handler\n    \n    sidebar.add(Button(item, on_click=set_page(item), className=button_class))\n\nmain_area.add(sidebar)\n\n# Content area\ncontent_area = Container(className="flex-1 p-6")\n\n# Page title\ncurrent_page = app.use_state("current_page").title()\ncontent_area.add(Text(current_page, className="text-2xl font-bold text-gray-800 mb-6"))\n\n# Dashboard content\nif app.use_state("current_page") == "dashboard":\n    # Stats cards\n    stats_grid = Container(className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8")\n    \n    stats = [\n        ("Total Users", "2,543", "\ud83d\udc65", "text-blue-600"),\n        ("Revenue", "$12,345", "\ud83d\udcb0", "text-green-600"),\n        ("Orders", "1,234", "\ud83d\udce6", "text-purple-600")\n    ]\n    \n    for title, value, icon, color in stats:\n        stat_card = Container(className="bg-white p-6 rounded-lg shadow-sm border")\n        stat_card.add(Text(icon, className="text-3xl mb-2"))\n        stat_card.add(Text(title, className="text-sm text-gray-600"))\n        stat_card.add(Text(value, className=f"text-2xl font-bold {color}"))\n        stats_grid.add(stat_card)\n    \n    content_area.add(stats_grid)\n    \n    # Chart section\n    chart_section = Container(className="bg-white p-6 rounded-lg shadow-sm border")\n    chart_section.add(Text("Analytics Overview", className="text-lg font-semibold mb-4"))\n    chart_placeholder = Container(className="h-64 bg-gray-50 rounded border-2 border-dashed border-gray-300 flex items-center justify-center")\n    chart_placeholder.add(Text("Chart would go here", className="text-gray-500"))\n    chart_section.add(chart_placeholder)\n    content_area.add(chart_section)\n\nmain_area.add(content_area)\napp_container.add(main_area)\n\n# Footer\nfooter = Container(className="bg-white border-t border-gray-200 p-4")\nfooter_content = Container(className="max-w-7xl mx-auto text-center")\nfooter_content.add(Text("\xa9 2024 OneForAll App. Built with OneForAll Framework.", className="text-sm text-gray-600"))\nfooter.add(footer_content)\napp_container.add(footer)\n\nwindow.add_child(app_container)\napp.append(window)\napp.run()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"You now know how to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Create flexible layouts with Flexbox and Grid"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Build responsive designs that work on all screen sizes"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Implement common layout patterns (header-footer, sidebar, cards)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Create reusable layout components"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Follow layout best practices"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./styling",children:"Styling Guide"})," - Master Tailwind CSS styling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./multiple-windows",children:"Multiple Windows"})," - Work with multiple windows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../api/components",children:"Components"})," - Learn about all available components"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);