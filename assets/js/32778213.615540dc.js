"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[360],{1170:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/app","title":"App","description":"The App class is the main entry point for OneForAll applications. It manages windows, state, and the overall application lifecycle.","source":"@site/docs/api/app.md","sourceDirName":"api","slug":"/api/app","permalink":"/OneForAll/docs/api/app","draft":false,"unlisted":false,"editUrl":"https://github.com/Rohit-Ahirwal/oneforall/tree/main/docs/docs/api/app.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Multiple Windows","permalink":"/OneForAll/docs/tutorial-basics/multiple-windows"},"next":{"title":"Window","permalink":"/OneForAll/docs/api/window"}}');var a=t(7259),l=t(1197);const o={sidebar_position:1},i="App",r={},d=[{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>append(window)</code>",id:"appendwindow",level:3},{value:"<code>run(dev_mode=True, dev_tool=False)</code>",id:"rundev_modetrue-dev_toolfalse",level:3},{value:"<code>use_state(key, default=None)</code>",id:"use_statekey-defaultnone",level:3},{value:"<code>set_state(key, value)</code>",id:"set_statekey-value",level:3},{value:"<code>use_effect(key, callback)</code>",id:"use_effectkey-callback",level:3},{value:"<code>refresh()</code>",id:"refresh",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>windows</code>",id:"windows",level:3},{value:"<code>state</code>",id:"state",level:3},{value:"<code>bridge</code>",id:"bridge",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"app",children:"App"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"App"})," class is the main entry point for OneForAll applications. It manages windows, state, and the overall application lifecycle."]}),"\n",(0,a.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from oneforall import App\n\napp = App()\n"})}),"\n",(0,a.jsx)(n.p,{children:"Creates a new OneForAll application instance."}),"\n",(0,a.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(n.h3,{id:"appendwindow",children:(0,a.jsx)(n.code,{children:"append(window)"})}),"\n",(0,a.jsx)(n.p,{children:"Adds a window to the application."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"window"})," (Window): The window instance to add to the application"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window\n\napp = App()\nwindow = Window(title="My Window")\napp.append(window)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"rundev_modetrue-dev_toolfalse",children:(0,a.jsx)(n.code,{children:"run(dev_mode=True, dev_tool=False)"})}),"\n",(0,a.jsx)(n.p,{children:"Starts the application and displays all registered windows."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"dev_mode"})," (bool, optional): Enable development mode with hot reload. Defaults to ",(0,a.jsx)(n.code,{children:"True"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"dev_tool"})," (bool, optional): Enable developer tools in webview. Defaults to ",(0,a.jsx)(n.code,{children:"False"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"app.run(dev_mode=True, dev_tool=True)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"use_statekey-defaultnone",children:(0,a.jsx)(n.code,{children:"use_state(key, default=None)"})}),"\n",(0,a.jsx)(n.p,{children:"Creates or retrieves a state variable."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"key"})," (str): The state key identifier"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"default"})," (any, optional): Default value if state doesn't exist. Defaults to ",(0,a.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The current value of the state variable"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'count = app.use_state("count", 0)\nuser_name = app.use_state("user_name", "Anonymous")\n'})}),"\n",(0,a.jsx)(n.h3,{id:"set_statekey-value",children:(0,a.jsx)(n.code,{children:"set_state(key, value)"})}),"\n",(0,a.jsx)(n.p,{children:"Updates a state variable and triggers reactive updates."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"key"})," (str): The state key to update"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"value"})," (any): The new value for the state"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'app.set_state("count", 42)\napp.set_state("user_name", "John Doe")\n'})}),"\n",(0,a.jsx)(n.h3,{id:"use_effectkey-callback",children:(0,a.jsx)(n.code,{children:"use_effect(key, callback)"})}),"\n",(0,a.jsx)(n.p,{children:"Registers an effect callback that runs when specified state changes."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"key"})," (str or list): State key(s) to watch for changes"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"callback"})," (function): Function to call when state changes"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def on_count_change():\n    print(f"Count changed to: {app.use_state(\'count\')}")\n\napp.use_effect("count", on_count_change)\n\n# Watch multiple keys\napp.use_effect(["count", "user_name"], on_count_change)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"refresh",children:(0,a.jsx)(n.code,{children:"refresh()"})}),"\n",(0,a.jsx)(n.p,{children:"Manually triggers a refresh of all windows and their components."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"app.refresh()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(n.h3,{id:"windows",children:(0,a.jsx)(n.code,{children:"windows"})}),"\n",(0,a.jsx)(n.p,{children:"A list of all windows registered with the application."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Type:"})," ",(0,a.jsx)(n.code,{children:"List[Window]"})]}),"\n",(0,a.jsx)(n.h3,{id:"state",children:(0,a.jsx)(n.code,{children:"state"})}),"\n",(0,a.jsx)(n.p,{children:"The state manager instance for this application."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Type:"})," ",(0,a.jsx)(n.code,{children:"StateManager"})]}),"\n",(0,a.jsx)(n.h3,{id:"bridge",children:(0,a.jsx)(n.code,{children:"bridge"})}),"\n",(0,a.jsx)(n.p,{children:"The bridge instance for handling Python \u2194 JavaScript communication."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Type:"})," ",(0,a.jsx)(n.code,{children:"OneForAllBridge"})]}),"\n",(0,a.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from oneforall import App, Window, Text, Button, Container\n\n# Create application\napp = App()\n\n# Initialize state\napp.use_state("counter", 0)\napp.use_state("message", "Hello OneForAll!")\n\n# Create main window\nwith Window(title="Counter App", size=(400, 300)) as window:\n    # Add container for layout\n    container = Container(className="p-4 space-y-4")\n    \n    # Add message text\n    container.add(Text(\n        app.use_state("message"), \n        className="text-xl font-bold text-center"\n    ))\n    \n    # Add counter display\n    container.add(Text(\n        f"Count: {app.use_state(\'counter\')}", \n        className="text-lg text-center"\n    ))\n    \n    # Add increment button\n    def increment():\n        current = app.use_state("counter")\n        app.set_state("counter", current + 1)\n    \n    container.add(Button(\n        "Increment", \n        on_click=increment,\n        className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"\n    ))\n    \n    # Add reset button\n    def reset():\n        app.set_state("counter", 0)\n    \n    container.add(Button(\n        "Reset", \n        on_click=reset,\n        className="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded"\n    ))\n    \n    window.add_child(container)\n\n# Add window to app\napp.append(window)\n\n# Set up effect to log counter changes\ndef log_counter_change():\n    count = app.use_state("counter")\n    print(f"Counter is now: {count}")\n\napp.use_effect("counter", log_counter_change)\n\n# Run the application\nif __name__ == "__main__":\n    app.run(dev_mode=True)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"./window",children:"Window"})," - Create and manage application windows"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../tutorial-basics/state-management",children:"State Management"})," - Learn about reactive state"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"./components",children:"Components"})," - Available UI components"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1197:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(6363);const a={},l=s.createContext(a);function o(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);