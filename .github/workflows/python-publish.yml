# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write  # Needed for PyPI publishing

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build and twine
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build release distributions
        run: |
          python -m build

      - name: Upload distributions artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      contents: read
      packages: write

    environment:
      name: pypi
      url: https://pypi.org/project/oneforall/${{ github.event.release.tag_name }}

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Twine
        run: python -m pip install --upgrade pip twine

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI using Twine
        run: |
          python -m twine upload dist/* -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}
